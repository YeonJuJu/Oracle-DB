/*
    데이터 무결성 제약조건
*/

/*
    TABLE SPACE 생성
*/

CREATE TABLESPACE INDX
DATAFILE 'C:\tools\ora_tablespace\indx.dbf' SIZE 100M
AUTOEXTEND ON NEXT 10M;

/*
    SUBJECT TABLE 생성
    
    SUBNO -> PRIMARY KEY
    SUBNAME -> NOT NULL
    TERM -> 1 OR 2 만 들어가도록 해라    

*/

/*
    USING INDEX TABLESPACE
    
    INDEX는 테이블과 다른 테이블 스페이스에 저장하는 것이 성능에 좋음
*/

DROP TABLE SUBJECT;

CREATE TABLE SUBJECT (
    SUBNO NUMBER(5) CONSTRAINT SUBJECT_NO_PK PRIMARY KEY 
                                 DEFERRABLE INITIALLY DEFERRED USING INDEX TABLESPACE INDX,
    SUBNAME VARCHAR2(20) CONSTRAINT SUBNAME_NN NOT NULL,
    TERM VARCHAR2(2) CONSTRAINT TERM_CK CHECK ( TERM IN ('1', '2') ),
    TYPE VARCHAR2(6)
);

DESC SUBJECT;

/*
    SUGANG TABLE 생성
    
    STUDNO -> PRIMARY KEY, FORIEGN KEY
    SUBNO   -> PRIMARY KEY, FORIEGN KEY
    REGDATE
    RESULT
*/

DROP TABLE SUGANG;

CREATE TABLE SUGANG(
        STUDNO      NUMBER(5) CONSTRAINT SUGANG_STUDNO_FK REFERENCES STUDENT(STUDNO),
        SUBNO        NUMBER(5) CONSTRAINT SUGANG_SUBNO_FK REFERENCES SUBJECT(SUBNO),
        REGDATE              DATE,
        RESULT        NUMBER(4),
        
        CONSTRAINT SUGANG_PK PRIMARY KEY (STUDNO, SUBNO)
);

DESC SUGANG;

SELECT * FROM TAB WHERE TNAME = 'SUGANG';

SELECT * FROM TAB;

/*
    USER_ DATA DICTIONARY 에서 무결성 제약조건 조회하기

    USER_CONSTRAINTS : 무결성 제약조건 값들을 저장하는 시스템 테이블
                                    CONSTRAINT_NAME, CONSTRAINT_TYPE
*/

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('SUBJECT', 'SUGANG');

/*
    CONSTRAINT TYPE
    
    C : CHECK OR NOT NULL
    P : PRIMARY KEY
    U : UNIQUE KEY
    R : FOREIGN KEY
*/

/*
    제약조건 추가 : ALTER TABLE table ~ ADD CONSTRAINT
    제약조건 수정 : ALTER TABLE table ~ MODIFY CONSTRAINT
    제약조건 삭제 : ALTER TABLE table ~ DROP CONSTRINT [CASCADE]
*/

/*
    급여 등급 테이블에 있는 GRADE 컬럼에는 PRIMARY KEY 무결성 제약조건,
    HISAL, LOSAL 컬럼에는 NOT NULL 제약조건 추가
*/

ALTER TABLE SALGRADE 
ADD CONSTRAINT SALGRADE_PK PRIMARY KEY (GRADE);

ALTER TABLE SALGRADE 
MODIFY (LOSAL CONSTRAINT SALGRADE_LOSAL_NN NOT NULL,
             HISAL CONSTRAINT SALGRADE_HISAL_NN NOT NULL);

/*
    학생 테이블에 USERID 와 IDNUM 컬럼에 UNIQUE 조건을 추가하고,
    PROFNO 컬럼에는 교수테이블의 PROFNO 컬럼을 참조하는 무결성 제약조건을 추가
*/

/*
    UNIQUE 제약조건 추가
    
    ALTER TABLE table
    ADD ( CONSTRAINT constraint UNIQUE (column);
*/

ALTER TABLE STUDENT
ADD ( CONSTRAINT STUDENT_USERID_UQ UNIQUE (USERID),
         CONSTRAINT STUDENT_IDNUM_UQ UNIQUE (IDNUM) );

/*
    참조 변수 추가
    
    ALTER TABLE table
    ADD CONSTRAINT constraint FOREIGN KEY (column) REFERENCES Rtable(Rcolumn);
*/

ALTER TABLE STUDENT
ADD CONSTRAINT STUDENT_PROFNO_FK FOREIGN KEY (PROFNO)
        REFERENCES PROFESSOR(PROFNO);

/*
    부서 테이블에서 COLLEGE 컬럼에 부서테이블 DEPTNO 컬럼을 참조하는 제약조건 추가
*/

ALTER TABLE DEPARTMENT
ADD CONSTRAINT DEPARTMENT_COLLEGE_FK FOREIGN KEY (COLLEGE)
        REFERENCES DEPARTMENT(DEPTNO);

SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'DEPARTMENT';

SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'SUBJECT';

/*
        SUBNO 은 PRIMARY KEY 인데 중복되는 값을 넣을 때 오류가 나지 않는다
        => INITIALLY DEFERRED 로 인해 COMMIT 시 제약조건을 검사하기 때문
*/

INSERT INTO SUBJECT VALUES(1, 'SQL', '1', '필수');
INSERT INTO SUBJECT VALUES(2, 'JAVA', '2', '선택');
INSERT INTO SUBJECT VALUES(1, 'ORACLE', '1', '필수');

SELECT * FROM SUBJECT;

INSERT INTO STUDENT 
VALUES(20201, '양만춘', 'ANSI', '2', '8901121569874', '98/01/12', '02)733-7451', 189, 60, 302, NULL);

INSERT INTO STUDENT 
VALUES(20202, '이세돌', 'BADOOK', '2', '9001121569874', '90/01/12', '02)733-7451', 189, 60, 500, 9903);

/*
    강좌 테이블에 있는 SUBJECT_NO_PK 무결성 조건 삭제
*/

ALTER TABLE SUBJECT
DROP CONSTRAINT SUBJECT_NO_PK;

--> 다른 테이블에서 참조하고 있음

/*
    무결성 제약조건 활성화 및 비활성화
    
    비활성화 : ALTER TABLE table DISABLE CONTRAINT
    활성화    : ALTER TABLE table ENABLE [NOVALIDATE] CONTRAINT
*/

/*
    수강 테이블에서 SUGANG_PK, SUGANG_STUDNO_FK 조건 비활성화
*/

ALTER TABLE SUGANG
DISABLE CONSTRAINT SUGANG_PK;

ALTER TABLE SUGANG
DISABLE CONSTRAINT SUGANG_STUDNO_FK;

ALTER TABLE SUGANG
ENABLE CONSTRAINT SUGANG_STUDNO_FK;

/*
    무결성 제약조건 조회
    
    USER_CONSTRAINTS        :   제약 조건 정보를 저장하고 있는 시스템 테이블
    USER_CONS_COLUMNS    :   제약 조건이 설정된 컬럼 이름을 저장하고 있는 시스템 테이블
*/

/*
    각 테이블테 정의된 모든 무결성 제약조건을 조회
*/

SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE, STATUS
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('STUDENT', 'PROFESSOR', 'DEPARTMENT');

SELECT TABLE_NAME, CONSTRAINT_NAME, COLUMN_NAME
FROM USER_CONS_COLUMNS
WHERE TABLE_NAME IN ('STUDENT', 'PROFESSOR', 'DEPARTMENT');
